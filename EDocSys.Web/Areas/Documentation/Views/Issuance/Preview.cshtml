@model EDocSys.Web.Areas.Documentation.Models.IssuanceViewModel
@using EDocSys.Infrastructure.Identity.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="row" style="max-width:1000px">
    <div class="col-12">
        <div class="documentation p-3 mb-3 print-container">
            <div class="@(User.IsInRole("E") || ViewBag.RoleE || User.IsInRole("SuperAdmin") || ViewBag.RoleSA ? "" : "no-print")">
                <div class="row">
                    <div class="col-sm-3 documentation-col">
                        <h4>
                            <img src="~/images/logo.png" />
                        </h4>
                    </div>
                    <div class="col-sm-6 documentation-col text-center">
                        <h1>
                            Documentation Issuance <br /><small>@Model.TitleName</small>
                        </h1>
                    </div>
                    <div class="col-sm-3 documentation-col">
                        @if (@Model.IssuanceStatusView != "Acknowledged")
                        {
                            <h3 class="float-right">@Model.IssuanceStatusView</h3>

                            <br>
                        }
                        else if (@Model.IssuanceStatusView == "Acknowledged")
                        {
                            <h3 class="float-right">@Model.IssuanceStatusView</h3>

                            <br>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12 text-center">
                        <div class="color-palette-set">
                            <h3 class="bg-secondary color-palette"><br /></h3>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <table class="table table-sm" style="border:hidden">
                            <tr style="border:hidden">
                                <td><b>Company</b></td>
                                <td>:</td>
                                <td>@Model.CompanyName</td>
                                <td class="float-right"><b>@Model.DOCNo</b></td>
                            </tr>
                            <tr style="border:hidden">
                                <td><b>Process</b></td>
                                <td>:</td>
                                <td>@Model.ProcessName</td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group row">
                            <div class="col">
                                <table class="table table-bordered table-sm">
                                    <tbody>
                                        <tr>
                                            <td><b>No</b></td>
                                            <td><b>Type of Document</b></td>
                                            <td><b>Document No. / Issue to (max 6 recipients)</b></td>
                                        </tr>
                                        @if (Model.IssuanceInfo.Count > 0)
                                        {
                                            @for (int x = 0; x < (Model.IssuanceInfo.Count); x++)
                                            {
                                                <tr>
                                                    @if (@Model.DOCStatus != "New")
                                                    {
                                                        <td rowspan="3">@Model.IssuanceInfo[x].No</td>
                                                    }
                                                    else
                                                    {
                                                        <td rowspan="2">@Model.IssuanceInfo[x].No</td>
                                                    }
                                                    <td>
                                                        @Model.IssuanceInfo[x].DocType
                                                        @if (@Model.DOCStatus != "New" && ViewBag.Amend && @Model.IssuanceStatusView == "Acknowledged" && @Model.IssuanceInfo[x].IsAmend == false)
                                                        {
                                                            <div class="no-print">
                                                                <form class="float-right" id="form_print_@Model.IssuanceInfo[x].Id" asp-area="Documentation" asp-controller="Issuance" method="post" asp-action="OnPostPrint" asp-route-id="@Model.IssuanceInfo[x].Id" asp-route-amend="true">
                                                                    <a href="javascript:$('#form_print_@Model.IssuanceInfo[x].Id').submit();" class="btn btn-success btn-xs"><i class="fas fa-pencil-alt"></i>  Amend</a>
                                                                </form>
                                                            </div>
                                                        }
                                                    </td>
                                                    <td>
                                                        <table style="width:100%; border:hidden;">
                                                            <tr>
                                                                <td>
                                                                    <table style="width:100%; border:hidden;">
                                                                        <tr>
                                                                            <td colspan="2">
                                                                                @Model.IssuanceInfo[x].DOCNo
                                                                                @if (@Model.IssuanceInfo[x].DOCUrl != "")
                                                                                {
                                                                                    <a class="float-right" href=@Model.IssuanceInfo[x].DOCUrl>View</a>
                                                                                }
                                                                            </td>
                                                                        </tr>
                                                                        <tr><td colspan="2"><b>Enter Recipient's Name</b> (max 6 recipeints)</td></tr>
                                                                        <tr>
                                                                            <td>1. @Model.IssuanceInfo[x].RecipientName1</td>
                                                                            <td>2. @Model.IssuanceInfo[x].RecipientName2</td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td>3. @Model.IssuanceInfo[x].RecipientName3</td>
                                                                            <td>4. @Model.IssuanceInfo[x].RecipientName4</td>
                                                                        </tr>
                                                                        <tr>
                                                                            <td>5. @Model.IssuanceInfo[x].RecipientName5</td>
                                                                            <td>6. @Model.IssuanceInfo[x].RecipientName6</td>
                                                                        </tr>
                                                                    </table>
                                                                </td>
                                                            </tr>
                                                        </table>

                                                    </td>
                                                </tr>
                                                @if (@Model.DOCStatus != "New")
                                                {
                                                    <tr>
                                                        <td>Details of Changes:</td>
                                                        <td>@Model.IssuanceInfo[x].Amendment</td>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr hidden="hidden">
                                                        <td>Details of Changes:</td>
                                                        <td>@Model.IssuanceInfo[x].Amendment</td>
                                                    </tr>

                                                }
                                                <tr>

                                                    <td>Purpose for Print Request:</td>
                                                    <td>@Model.IssuanceInfo[x].Purpose</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <table class="table table-bordered table-sm">
                            <tbody>
                                <tr>
                                    <td></td>
                                    <td><b>Requsted By</b></td>
                                    <td><b>Verified By</b></td>
                                    <td><b>To Be Approved By</b></td>
                                    <td><b>To Be Acknowledge By</b></td>
                                </tr>
                                <tr>
                                    <td><b>Name</b></td>
                                    <td>@Model.RequestedBy</td>
                                    <td>@Model.VerifiedName</td>
                                    <td>@Model.ApprovedBy</td>
                                    <td>@Model.AcknowledgedBy</td>
                                </tr>
                                <tr>
                                    <td><b>Position</b></td>
                                    <td>@Model.RequestedByPosition</td>
                                    <td>@Model.PositionVer</td>
                                    <td>@Model.PositionApp</td>
                                    <td>@Model.PositionAck</td>
                                </tr>
                                <tr>
                                    <td><b>Date</b></td>
                                    <td>@Html.DisplayFor(modelItem => @Model.RequestedByDate)</td>
                                    <td>@Html.DisplayFor(modelItem => @Model.DateVerified)</td>
                                    <td>@Html.DisplayFor(modelItem => @Model.DateApproved)</td>
                                    <td>@Html.DisplayFor(modelItem => @Model.DateAcknowledged)</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <table class="table table-bordered table-sm">
                            <tbody>
                                <tr>
                                    <td colspan="2">
                                        <h6><b>CONTROLLED DOCUMENT</b></h6>
                                        <p>
                                            Note: This document is the property of the Company. It shall not be reproduced, copied, altered or disclosed
                                            to any person without written consent of the HOC/HOD and shall be returned to the Company.
                                        </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td width="50%">CONTROLLED COPY</td>
                                    <td>
                                        ELECTRONIC - @Model.PrintCount
                                        @if (User.IsInRole("E") || ViewBag.RoleE || User.IsInRole("SuperAdmin") || ViewBag.RoleSA)
                                        {
                                            <div class="no-print">
                                                <form method="get" asp-area="documentation" asp-controller="Issuance" asp-action="Preview" asp-route-id="@Model.Id">
                                                    <input id="noElectronic" type="text" asp-for="PrintCount" name="PrintCount" class="form-control">
                                                    <button type="submit" class="btn btn-success">Update Electronic</button>
                                                </form>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (User.IsInRole("E") || ViewBag.RoleE || User.IsInRole("SuperAdmin") || ViewBag.RoleSA)
                {
                    <div class="row print-only">
                        <table>
                            <tbody>
                                <tr>
                                    <td>Printed By</td>
                                    <td>@User.Identity.Name/@Model.CompanyName on @DateTime.Now</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- this row will not appear when printing -->
    <div class="row no-print">
        <div class="col-12">
            <a onclick="copyPageUrl()" class="btn btn-default float-right"><i class="fas fa-copy"></i> Copy Doc URL</a>
            @if (@Model.IssuanceStatusView == "Acknowledged" && @Model.IsArchive == false)
            {
                <a href="/documentation/issuance/CreateOrEdit?id=@Model.Id&rev=true&docStatus=@Model.DOCStatus&&ce=bd773a2a-ffc6-4ed2-9ba3-c7ea631628be" class="btn btn-default float-right">
                    <i class="fas fa-copy"></i>
                    New Revision Issuance
                </a>
            }
            @if (User.IsInRole("E") || ViewBag.RoleE || User.IsInRole("SuperAdmin") || ViewBag.RoleSA)//User.IsInRole("D") || User.IsInRole("A") ||
            {
                @* <button class="btn btn-default" onclick="window.print();"><i class="fas fa-print"></i> Print</button>*@
                <a class="btn btn-default" onclick="window.print();"><i class="fas fa-print"></i> Print</a>
            }
            @*@if (User.IsInRole("D") || User.IsInRole("A") || User.IsInRole("E") || User.IsInRole("SuperAdmin"))
            {
            if (Model.IssuanceStatusView == "New" || Model.IssuanceStatusView == "Rejected")
            {
            <a href="/documentation/issuance/CreateOrEdit?id=@Model.Id&&ce=bd773a2a-ffc6-4ed2-9ba3-c7ea631628be" class="btn bg-success">
            <i class="fas fa-pencil-alt"></i>
            Edit Issuance
            </a>

            <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'
            + '&&status=1', 'Submit for Formatting Check')"
            class="btn bg-success"><i class="fas fa-paper-plane"></i>  Submit for Formatting Check</a>
            }
            }*@

            @if ((Model.IssuanceStatusView == "New" || Model.IssuanceStatusView == "Rejected") && (User.IsInRole("D") || ViewBag.RoleD || User.IsInRole("E") || ViewBag.RoleE || User.IsInRole("SuperAdmin") || ViewBag.RoleSA))
            {
                @if (Model.VerifiedBy != null && Model.ApprovedBy != null)
                {
                    <a href="/documentation/issuance/CreateOrEdit?id=@Model.Id&docStatus=@Model.DOCStatus&&ce=bd773a2a-ffc6-4ed2-9ba3-c7ea631628be" class="btn bg-success">
                        <i class="fas fa-pencil-alt"></i>
                        Edit Issuance
                    </a>

                    <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'
                                    + '&&status=1', 'Submit for Approval')"
                       class="btn bg-success"><i class="fas fa-paper-plane"></i>  Submit for Approval</a>
                }
                else
                {
                    <a href="/documentation/issuance/CreateOrEdit?id=@Model.Id&docStatus=@Model.DOCStatus&&ce=bd773a2a-ffc6-4ed2-9ba3-c7ea631628be" class="btn bg-success">
                        <i class="fas fa-pencil-alt"></i>
                        Edit Issuance (Unable to submit without verifier and approver)
                    </a>
                }
            }


            @if (Model.IssuanceStatusView == "Rejected" && (User.IsInRole("D") || ViewBag.RoleD))
            {

            }

            @if (Model.IssuanceStatusView == "Submitted" && (User.IsInRole("A") || User.IsInRole("B1") || ViewBag.RoleAB1))
            {
                if (Model.VerifiedBy != null && ViewBag.IsVerified == true)
                {
                    <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=2','Verify')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Verify</a>
                    <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=5','Reject')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Reject</a>
                }

            }

            @if (Model.IssuanceStatusView == "Verified" && (User.IsInRole("A") || User.IsInRole("B1") || ViewBag.RoleAB1) && ViewBag.IsApp == true)
            {
                if (Model.ApprovedBy != null && ViewBag.IsApp == true) //
                {
                    <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=4','Approve')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Approve</a>
                    <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=5','Reject')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Reject</a>
                }
                @*  else if (Model.ApprovedBy == null && Model.VerifiedBy != null && ViewBag.IsAck == true) { // if Concurred 1 To Approver
            <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=4','Approved')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Approved</a>
            <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?proceissuanceIddureId=@Model.Id'+'&&status=5','Reject')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Reject</a>
            }*@
            }
            @if (Model.IssuanceStatusView == "Approved" && (User.IsInRole("E") || ViewBag.RoleE))
            {
                <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=7','Acknowledge')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Acknowledge</a>
                <a onclick="jQueryModalGet('/documentation/issuancestatus/OnGetSubmit?issuanceId=@Model.Id'+'&&status=5','Reject')" class="btn bg-success"><i class="fas fa-paper-plane"></i>  Reject</a>
            }

        </div>
    </div>
</div>
@section Scripts {
    <style>
        .print-only {
            display: none;
        }

        @@media print {
            .no-print {
                display: none;
            }

            .print-only {
                display: block;
            }

            ::-webkit-scrollbar {
                display: none;
            }

            div {
                page-break-inside: auto;
                width: auto
            }

            table {
                page-break-inside: auto;
                width: auto;
                margin-bottom: 5px
            }

            tr {
                page-break-inside: auto
            }
        }
    </style>
    <script>
        document.getElementById("btnPrint").onclick = function () {
            printElement(document.getElementById("printThis"));

            var modThis = document.querySelector("#printSection .modifyMe");
            modThis.appendChild(document.createTextNode(" new"));

            window.print();
        }

        function printElement(elem) {
            var domClone = elem.cloneNode(true);

            var $printSection = document.getElementById("printSection");

            if (!$printSection) {
                var $printSection = document.createElement("div");
                $printSection.id = "printSection";
                document.body.appendChild($printSection);
            }

            $printSection.innerHTML = "";

            $printSection.appendChild(domClone);
        }
    </script>

    <script src="~/ckeditor5-build-classic/build/ckeditor.js"></script>

    <script>
        class MyUploadAdapter {
            constructor(loader) {
                // The file loader instance to use during the upload. It sounds scary but do not
                // worry — the loader will be passed into the adapter later on in this guide.
                this.loader = loader;
            }

            // Starts the upload process.
            upload() {
                return this.loader.file
                    .then(file => new Promise((resolve, reject) => {
                        this._initRequest();
                        this._initListeners(resolve, reject, file);
                        this._sendRequest(file);
                    }));
            }

            // Aborts the upload process.
            abort() {
                if (this.xhr) {
                    this.xhr.abort();
                }
            }

            // Initializes the XMLHttpRequest object using the URL passed to the constructor.
            _initRequest() {
                const xhr = this.xhr = new XMLHttpRequest();

                // Note that your request may look different. It is up to you and your editor
                // integration to choose the right communication channel. This example uses
                // a POST request with JSON as a data structure but your configuration
                // could be different.
                xhr.open('POST', '@Url.Action("UploadImage", "Issuance")', true);
                xhr.responseType = 'json';
            }

            _initListeners(resolve, reject, file) {
                const xhr = this.xhr;
                const loader = this.loader;
                const genericErrorText = `Couldn't upload file: ${file.name}.`;

                xhr.addEventListener('error', () => reject(genericErrorText));
                xhr.addEventListener('abort', () => reject());
                xhr.addEventListener('load', () => {
                    const response = xhr.response;

                    // This example assumes the XHR server's "response" object will come with
                    // an "error" which has its own "message" that can be passed to reject()
                    // in the upload promise.
                    //
                    // Your integration may handle upload errors in a different way so make sure
                    // it is done properly. The reject() function must be called when the upload fails.
                    if (!response || response.error) {
                        return reject(response && response.error ? response.error.message : genericErrorText);
                    }

                    // If the upload is successful, resolve the upload promise with an object containing
                    // at least the "default" URL, pointing to the image on the server.
                    // This URL will be used to display the image in the content. Learn more in the
                    // UploadAdapter#upload documentation.
                    resolve({
                        default: response.url
                    });
                });

                // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded
                // properties which are used e.g. to display the upload progress bar in the editor
                // user interface.
                if (xhr.upload) {
                    xhr.upload.addEventListener('progress', evt => {
                        if (evt.lengthComputable) {
                            loader.uploadTotal = evt.total;
                            loader.uploaded = evt.loaded;
                        }
                    });
                }
            }

            // Prepares the data and sends the request.
            _sendRequest(file) {
                // Prepare the form data.
                const data = new FormData();

                data.append('upload', file);

                // Important note: This is the right place to implement security mechanisms
                // like authentication and CSRF protection. For instance, you can use
                // XMLHttpRequest.setRequestHeader() to set the request headers containing
                // the CSRF token generated earlier by your application.

                // Send the request.
                this.xhr.send(data);
            }

        }

        function MyCustomUploadAdapterPlugin(editor) {
            editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                // Configure the URL to the upload script in your back-end here!
                return new MyUploadAdapter(loader);
            };
        }

        ClassicEditor
            .create(document.querySelector('#editor'),
                {
                    toolbar: {
                        items: [

                        ]
                    }
                }
            )

            .then(editor => {
                window.editor = editor;
                editor.isReadOnly = true;
            })

            .catch(error => {
                console.error(error);
            });
    </script>
    <script>
        function copyPageUrl() {
            var copyText = "https://edocs.lion.com.my/documentation/issuance/preview?id=" + @Model.Id.ToString();
            navigator.clipboard.writeText(copyText);
            alert("Copied the Doc url to the clipboard: " + copyText);
        }

        window.onafterprint = function () {
            window.location.href = "/documentation/issuance/Preview?id=" + @Model.Id.ToString() + "&print=true&&ce=bd773a2a-ffc6-4ed2-9ba3-c7ea631628be";
        }
    </script>
}